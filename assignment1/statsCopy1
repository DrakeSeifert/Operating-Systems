#!/bin/bash

#Checks for correct number of arguments
if [ "$#" -ne 1 ] && [ "$#" -ne 2 ]
then
	(>&2 echo "Usage: stats {-rows|-cols} [file]")
	exit 1
fi

#initial = first two chars of first arg
initial="$(echo $1 | head -c 2)"

#check arg 1 begins with "-r" or "-c"
if [ "$initial" != "-r" ] && [ "$initial" != "-c" ]
then
	(>&2 echo "Usage: stats {-rows|-cols} [file]")
	exit 1
fi

#Check if optional file entered
if [ ! -z $2 ]
then
	#if so, check if file exists in current directory
	if [ ! -f "$2" ]
	then
		(>&2 echo "stats: cannot read" $2 )
		exit 1
	fi
	#check if file is empty
	if [ ! -s "$2" ]
	then
		(>&2 echo "Error, empty file" $2 )
		exit 1
	fi

#else get user input
else
	echo "No file selected."
	echo "Enter number of rows: "
	read num_rows
	echo "Enter number of cols: "
	read num_cols

	#create temp file
	inputFile="mytempfile$$"

	for i in $(seq 1 $num_rows)
	do
		#Enter each num for row 1
		for j in $(seq 1 $num_cols)
		do
			echo "Enter num for row $i, col $j: "
			read num 
			echo -n $num >> $inputFile
			echo -n -e "\t" >> $inputFile
		done
		
		#if not the last line, start new line
		if [ "$i" != "$numrows" ]
		then
			echo -n -e "\n" >> $inputFile
		fi
	done

fi

#if file parameter entered, set variable to read from it
if [ ! -z $2 ]
then
	readme=$2
#else set it to the temp file
else
	readme=$inputFile
fi

#if columns selected, reverse columns and rows to temp file
#if [ "$initial" == "-c" ]
#then
#	colFile="tempColFile$$"
#
#	count=0
#	while read myLine
#	do
#		for i in $myLine
#		do
#			count=`expr $count + 1`	
#		done
#		break
#	done < $readme
#
#	echo "count = $count"
#	LineNum=0
#	while read myLine
#	do
#		LineNum=`expr $LineNum + 1`
#		mynum=1
#		for i in $myLine
#		do
#			echo "i= $i"
#			if [ "$mynum" -eq 1 ]
#			then
#				echo "AHHHHHH"
#				cut -c 1 $inputfile >> $colFile
#				echo -n -e "\t" >> $colFile
#				mynum=`expr $mynum + 2`
#			else
#				cut -c $mynum $inputFile >> $colFile
#				echo -n -e "\t" >> $colFile
#				mynum=`expr $mynum + 2`
#			fi
#		done
#
#	done < $readme
#fi
#cat $colFile
#rm $colFile
#exit 0


LineNum=0
while read myLine
do
	sum=0
	count=0
	average=0
	LineNum=`expr $LineNum + 1`
	#echo "lineNum myLine $lineNum $myLine"

	for i in $myLine
	do
		num=$i
		count=`expr $count + 1`
		#echo "count num $count $num"
		sum=`expr $sum + $num`
	done

	#if ( ($count % 2) == 1 )
	#then 
	#	sorted=sort -i 

	myArray=()
	for i in $myLine
	do
		myArray+=($i)
	done

	myArray=( $( for i in "${myArray[@]}"; do echo "$i"; done | sort -n))
	
	median=${myArray[($count/2)]}
	echo "Median: $median"
	#average=`expr $sum / $count`

	echo " Row #$LineNum"
	echo " Line count: $count"
	echo " Line sum: $sum"
	#echo " Line average: $average"
	echo -n " Line average: " 
	#printf "%.0f" $(echo "scale=2; $sum/$count" | bc)
	ave=$(echo "scale=2; $sum/$count" | bc)
	ave=$(printf "%.0f" $ave)
	echo $ave
	#echo -n " "
	#echo "hello"

done < $readme

#if no file parameter, remove temp file
if [ -z $2 ]
then
	rm $inputFile
fi

#if [ "$initial" == "-c" ]
#then
#	rm $colFile
#fi
